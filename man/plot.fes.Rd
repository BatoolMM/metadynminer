\name{plot.fes}
\alias{plot.fes}
\title{Free energy surface plotter}
\description{The function recognizes whether the free energy surface (FES) is 1D or 2D.
             A 1D FES is ploted as a free energy profile. A 2D FES is ploted as a heatmap
             (function \code{image}) and as contours.
}
\usage{
plot.fes(inputfes, plottype = "both",
         nlevels = 10, levels = NULL, col = rainbow(135)[100:1],
         labels = NULL, labcex = 0.6, drawlabels = TRUE, contcol=par("fg"), ...)
}
\arguments{
  \item{inputfes}{
      The object \code{inputfes} is a free energy surface calculated by function \code{mtdfes}, \code{mtdfes2}
      or read by \code{read.fes}.
}
  \item{plottype}{
      \code{type} what type of plot should be drawn. Plot type choice is irelevant for 1D FES. Possible types are
          \itemize{
              \item{\code{both} plots both colored heatmap (\code{image}) and contours. It is deafault.}
              \item{\code{image} plots colored heatmap (\code{image}) only}
              \item{\code{contour} plots contours only.}
          }
}
  \item{nlevels}{
    number of contour levels desired \code{levels} is not supplied.
}
  \item{levels}{
    a vector giving the labels for the contour lines.  If \code{NULL}
    then the levels are used as labels, otherwise this is coerced
    by \code{as.character}.
}
  \item{col}{
    a list of image colors such as that generated by \code{rainbow},
    \code{heat.colors}, \code{topo.colors}, \code{terrain.colors} or similar
    functions.
}
  \item{labels}{
    a vector giving the labels for the contour lines.  If \code{NULL}
    then the levels are used as labels, otherwise this is coerced
    by \code{as.character}.
}
  \item{labcex}{
    \code{cex} for contour labelling.  This is an absolute size, not a
    multiple of \code{par("cex")}.
}
  \item{drawlabels}{
}
  \item{method}{
}
  \item{contcol}{
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (inputfes, plottype = "both", xlim = NULL, ylim = NULL, 
    zlim = NULL, main = NULL, sub = NULL, xlab = NULL, ylab = NULL, 
    nlevels = 10, levels = NULL, col = rainbow(135)[100:1], labels = NULL, 
    labcex = 0.6, drawlabels = TRUE, method = "flattest", contcol = par("fg"), 
    lty = par("lty"), lwd = par("lwd"), axes = T) 
{
    fes <- inputfes$fes
    rows <- inputfes$rows
    if (inputfes$dimension == 1) {
        x <- inputfes$x
        if (is.null(xlab)) 
            xlab = "CV"
        if (is.null(ylab)) 
            ylab = "free energy"
        if (is.null(xlim)) 
            xlim <- c(min(x), max(x))
        if (is.null(ylim)) {
            ylim <- range(pretty(range(fes)))
        }
        plot(x, fes, type = "l", col = col, xlim = xlim, ylim = ylim, 
            xlab = xlab, ylab = ylab, axes = axes, main = main, 
            sub = sub)
    }
    else {
        x <- inputfes$x
        y <- inputfes$y
        if (is.null(xlab)) 
            xlab = "CV1"
        if (is.null(ylab)) 
            ylab = "CV2"
        if (is.null(zlim)) {
            zlim <- range(pretty(range(fes)))
        }
        if (is.null(levels)) {
            levels <- pretty(zlim, nlevels)
        }
        if (is.null(xlim)) 
            xlim <- c(min(x), max(x))
        if (is.null(ylim)) 
            ylim <- c(min(y), max(y))
        if (plottype == "image" || plottype == "both") {
            image(x, y, fes, zlim = zlim, col = col, xlim = xlim, 
                ylim = ylim, xlab = xlab, ylab = ylab, axes = axes, 
                main = main, sub = sub)
        }
        if (plottype == "contour") {
            contour(x, y, fes, zlim = zlim, nlevels = nlevels, 
                levels = levels, labels = labels, labcex = labcex, 
                drawlabels = drawlabels, method = method, col = contcol, 
                lty = lty, lwd = lwd, main = main, sub = sub)
        }
        if (plottype == "both") {
            contour(x, y, fes, zlim = zlim, nlevels = nlevels, 
                levels = levels, labels = labels, labcex = labcex, 
                drawlabels = drawlabels, method = method, col = contcol, 
                lty = lty, lwd = lwd, add = T)
        }
    }
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
